When would you want to use a remote repository rather than keeping all your work
local?
1. So I can access the repository from a different device if needed.
2. To save a copy of my work in the cloud as a backup in case my local repo's
   data is lost
3. To allow others to access my repository/make changes to the contents of my
   repository or project if I am working on a project in collaboration with 
   others. 
4. To have an online record of all projects I've worked on as a very
   rudimentary portfolio of sorts.


Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

If Git were to sync my repositories automatically, it may make changes to my
local or remote repos that would undo changes I may have made since the last
sync. It is safer to manually pull changes instead because I will only 
pull changes when I am certain they will not affect the rest of the programme
in an undesirable way.


Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

To fork a repository on GitHub is to copy a repository from one GitHub account
to another. The entire process is done on GitHub’s servers. Forking is important
as it allows users to clone copies of online repositories onto their own devices
for offline modification while still allowing the original creator of the repository
to claim credit for any work that has been done on the repository so far. In this way, a copy of the original repository can be modified even if a user cannot access or modify the original repo directly.

To clone a repository is to copy the contents of either a remote or a local repository to a local repository on a device. The process usually refers to 
‘downloading’ a copy of an online repository to a device for offline use, but could also mean copying a repository from one location on a device to another

Branches are a feature of Git that allow users to make significant 
modifications to a project without losing the commit data for earlier versions.
While cloning or forking a repository deals are operations performed ON repositories, branching is done WITHIN repositories.



What is the benefit of having a copy of the last known state of the remote
stored locally?

Having a branch in your local repo with the last known state of the remote repo can be useful if you will be offline for some time. This is because you can continue to work on your local repo, merge it with the offline copy of the remote repo, and then push the finished programme to the remote repo when you have internet access. This basically prevents allows you to work on the data in a remote repository even if you don’t have internet access, which can be useful.




How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?



When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?
